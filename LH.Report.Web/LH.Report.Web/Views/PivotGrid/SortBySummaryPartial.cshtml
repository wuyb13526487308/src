@functions{
    void SetSortBySummary(MVCxPivotGrid pivotGrid) {
        foreach(DevExpress.Web.ASPxPivotGrid.PivotGridField field in pivotGrid.Fields) {
            if(field.Area == PivotArea.DataArea) {
                field.CellStyle.Font.Bold = false;
            }
        }

        DevExpress.Web.ASPxPivotGrid.PivotGridField selField = pivotGrid.Fields[Session["SortField"].ToString()];
        if(selField != null) {
            selField.CellStyle.Font.Bold = true;
            pivotGrid.Fields["SalesPerson"].SortBySummaryInfo.FieldName = selField.FieldName;
            pivotGrid.Fields["SalesPerson"].SortBySummaryInfo.SummaryType = selField.SummaryType;
        }
    }
}

@Html.DevExpress().PivotGrid(
    settings => 
    {
        settings.Name = "pivotGrid";
        settings.CallbackRouteValues = new { Controller = "PivotGrid", Action = "SortBySummaryPartial" };
        settings.Width = Unit.Percentage(100);
        settings.OptionsView.ShowHorizontalScrollBar = true;

        settings.Fields.Add( field => {
            field.Area = PivotArea.RowArea;
            field.AreaIndex = 0;
            field.Caption = "Ordered Month";
            field.FieldName = "OrderDate";
            field.GroupInterval = PivotGroupInterval.DateMonth;
        });
        settings.Fields.Add( field => {
            field.Area = PivotArea.RowArea;
            field.AreaIndex = 1;
            field.Caption = "Sales Person";
            field.FieldName = "SalesPerson";
            field.SortOrder = PivotSortOrder.Descending;
            field.HeaderStyle.Font.Bold = true;
        });
        settings.Fields.Add( field => {
            field.Area = PivotArea.FilterArea;
            field.AreaIndex = 0;
            field.Caption = "Year";
            field.FieldName = "OrderDate";
            field.GroupInterval = PivotGroupInterval.DateYear;
            field.FilterValues.FilterType = PivotFilterType.Included;
            field.FilterValues.Add(1997);
        });
        settings.Fields.Add( field => {
            field.Area = PivotArea.DataArea;
            field.AreaIndex = 0;
            field.Caption = "Order Amount";
            field.FieldName = "ExtendedPrice";
        });
        settings.Fields.Add( field => {
            field.Area = PivotArea.DataArea;
            field.AreaIndex = 1;
            field.Caption = "Quantity";
            field.FieldName = "Quantity";
            field.CellFormat.FormatString = "#.##";
            field.CellFormat.FormatType = FormatType.Numeric;
        });
        settings.Fields.Add( field => {
            field.Area = PivotArea.DataArea;
            field.AreaIndex = 2;
            field.Caption = "Discount (Avg)";
            field.FieldName = "Discount";
            field.SummaryType = PivotSummaryType.Average;
            field.CellFormat.FormatString = "p";
            field.CellFormat.FormatType = FormatType.Numeric;
        });
        settings.PreRender = (sender, e) => {
            SetSortBySummary((MVCxPivotGrid)sender);
        };
        settings.AfterPerformCallback = (sender, e) => {
            SetSortBySummary((MVCxPivotGrid)sender);
        };
    }).Bind(Model).GetHtml()