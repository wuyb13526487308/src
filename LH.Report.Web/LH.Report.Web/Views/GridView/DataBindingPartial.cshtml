@using System.Text.RegularExpressions

@Html.DevExpress().GridView(
    settings =>
    {
        settings.Name = "gvDataBinding";
        settings.CallbackRouteValues = new { Controller = "GridView", Action = "DataBindingPartial" };
        settings.Width = Unit.Percentage(100);

        settings.SettingsText.Title = "DevExpress on Twitter";
        settings.Settings.ShowTitlePanel = true;
        settings.Settings.ShowStatusBar = GridViewStatusBarMode.Visible;
        settings.SettingsPager.Mode = GridViewPagerMode.ShowAllRecords;
        settings.SettingsPager.AllButton.Text = "All";
        settings.SettingsPager.NextPageButton.Text = "Next &gt;";
        settings.SettingsPager.PrevPageButton.Text = "&lt; Prev";

        settings.SetStatusBarTemplateContent(c =>
        {
            ViewContext.Writer.Write(
                "<span id=\"lblLoading\">&nbsp;</span>"
            );
        });
        settings.SetEmptyDataRowTemplateContent(c =>
        {
            ViewContext.Writer.Write(
                "Sorry, the twitter server is not available this time."
            );
        });
            
            
        settings.CustomColumnDisplayText = (sender, e) => {
            if(e.Column.FieldName != "Text") return;

            string displayText = (e.Value != null) ? e.Value.ToString() : "";
            TweetsDemoReplaceItem[] replaceItems = new TweetsDemoReplaceItem[] { 
                new TweetsDemoReplaceItem{
                    RegEx = new Regex("http://[^\\s()]+"),
                    ReplaceDelegate = (text, match) => { return text.Replace(match.Value, string.Format("<a href=\"{0}\">{0}</a>", 
                        HttpUtility.HtmlEncode(match.Groups[0].Value))); }
                },
                new TweetsDemoReplaceItem{
                    RegEx = new Regex("(^|[^\\w])@(\\w+)"), 
                    ReplaceDelegate = (text, match) => { return text.Replace(match.Value, string.Format("{0}<a href=\"http://twitter.com/{1}\">@{1}</a>", 
                        match.Groups[1], HttpUtility.HtmlEncode(match.Groups[2].Value))); }
                },
                new TweetsDemoReplaceItem{
                    RegEx = new Regex("(^|[^\\w/&?])(#\\w+)"), 
                    ReplaceDelegate = (text, match) => { return text.Replace(match.Value, string.Format("{0}<a href=\"http://twitter.com/search?q={1}\">{2}</a>", 
                        match.Groups[1], Url.Encode(match.Groups[2].Value), HttpUtility.HtmlEncode(match.Groups[2].Value))); }
                }
            };

            foreach(TweetsDemoReplaceItem replaceItem in replaceItems) {
                MatchCollection matches = replaceItem.RegEx.Matches(displayText);
                foreach(Match match in matches)
                    displayText = replaceItem.ReplaceDelegate(displayText, match);
            }
            e.DisplayText = displayText;
        };
                                
    }).Bind(Model).GetHtml()